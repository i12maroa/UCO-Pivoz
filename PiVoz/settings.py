"""
Django settings for PiVoz project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '******************'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False


ALLOWED_HOSTS = ['ucopivoz.com', 'www.ucopivoz.com',]

# ALLOWED_HOSTS = ['*']
CORS_ORIGIN_ALLOW_ALL = True

# SSL Config

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

SESSION_EXPIRE_SECONDS = 3000  # 5 minutes
SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
#SESSION_EXPIRE_AT_BROWSER_CLOSE = True


# Application definition

INSTALLED_APPS = [
    'jet',                                      # https://github.com/geex-arts/django-jet
    'jet.dashboard',
    'jet_django',
    'corsheaders',
    'django_celery_results',
    'django_extensions',
    'sendgrid',                                 # https://github.com/sendgrid
    'Galeria',
    'django_registration',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_google_maps',                       # https://github.com/madisona/django-google-maps
    'django_cleanup.apps.CleanupConfig',        # https://github.com/un1t/django-cleanup
    'phonenumber_field',                        # https://github.com/stefanfoulis/django-phonenumber-field
    'imagekit',                                 # https://github.com/matthewwithanm/django-imagekit
]

MIDDLEWARE = [
    'simple_history.middleware.HistoryRequestMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django_session_timeout.middleware.SessionTimeoutMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'PiVoz.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'PiVoz.backends.RFIDAuthentication',
    # Backend para autenticación por RFID
    'django.contrib.auth.backends.ModelBackend',
]


#--------------------------------------------  API KEYS --------------------------------------------#
#                                                                                                   #
#                 Atención. Por cuestiones de seguridad no se mostrarán las API KEYS              #
#                                                                                                   #
#---------------------------------------------------------------------------------------------------#

# Email Configuration
# Sendgrid : https://sendgrid.com/docs/for-developers/sending-email/django/


EMAIL_BACKEND = "sgbackend.SendGridBackend"
SENDGRID_API_KEY = "**************************"

# Django Google Maps API KEY

GOOGLE_MAPS_API_KEY = '**************'

""" Configuration of Django Registration """

ACCOUNT_ACTIVATION_DAYS = 7 # One-week activation window
REGISTRATION_OPEN = True



GRAPH_MODELS = {
  'all_applications': False,
  'group_models': True,
}



# Celery Config

CELERY_RESULT_BACKEND = 'django-db'
#CELERY_BROKER_URL = 'django://'
#INSTALLED_APPS += ('kombu.transport.django', )



# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

AUTH_USER_MODEL = 'Galeria.MyUser'

#LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'login'


STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
